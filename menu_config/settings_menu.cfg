#####################
### Settings menu ###
#####################
[menu __mymain __settings]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Settings

##################
### Manual MBL ###
##################
[menu __mymain __settings __manual_mbl]
type: list
name: Manual MBL

[menu __mymain __settings __manual_mbl __zpos]
type: command
name: Z-Pos = {'%05.1f' % printer.gcode_move.position.z}

[menu __mymain __settings __manual_mbl __start]
type: command
name: Start Calibration
gcode:
    G28
    BED_MESH_CALIBRATE METHOD=manual
    TESTZ Z=-2

[menu __mymain __settings __manual_mbl __step_down]
type: command
name: Step Down
gcode:
    TESTZ Z=-.01

[menu __mymain __settings __manual_mbl __step_up]
type: command
name: Step Up
gcode:
    TESTZ Z=.01

[menu __mymain __settings __manual_mbl __next]
type: command
name: Next
gcode:
    ACCEPT
    TESTZ Z=-2

[menu __mymain __settings __manual_mbl __save]
type: command
name: Save & Restart
gcode:
    SAVE_CONFIG
    FIRMWARE_RESTART

[menu __mymain __settings __manual_mbl __abort]
type: command
name: Abort
gcode:
    ABORT

##################
### PID Tuning ###
##################
[menu __mymain __settings __pidtuning]
type: list
name: PID Tuning

[menu __mymain __settings __pidtuning __hotend_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == 'Printing') and ('extruder' in printer)}
name: Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __mymain __settings __pidtuning __hotbed_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: Tune Hotbed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __mymain __settings __pidtuning __save_config]
type: command
name: Save config
gcode: SAVE_CONFIG

#####################################
### DUMP PARAMS & FW/HOST RESTART ###
#####################################
[menu __mymain __settings __dump]
type: command
name: Dump Parameters
gcode:
    {% for name1 in printer %}
        {% for name2 in printer[name1] %}
            { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
        {% else %}
            { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
        {% endfor %}
    {% endfor %}

[menu __mymain __settings __firmware_restart]
type: command
name: FW Restart
enable: {printer.idle_timeout.state == "Idle"}
gcode: FIRMWARE_RESTART

[menu __mymain __settings __host_restart]
type: command
name: Host Restart
enable: {printer.idle_timeout.state == "Idle"}
gcode: RESTART